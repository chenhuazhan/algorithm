===========================
dd_engi的动态规划专项练习赛
===========================

~~~~~~~~~~~~~
2007年11月9日
~~~~~~~~~~~~~


:命题: Tianyi Cui (dd_engi)
:审题: Moony Chou (zmy)
:比赛日期: 2007年11月9日 星期五
:比赛时间: 18:30 -- 21:40
:提交邮箱: | dp07submit@gmail.com
           | xxjs2000@163.com
:比赛支持: | `INFOWIRE`_
           | `OIBH BBS`_

.. _INFOWIRE: https://groups.google.com/group/infowire/browse_thread/thread/1fa0cc1cb5e21175

.. _OIBH BBS: http://oibh.org/bbs/thread-17787-1-1.html

--------
题目说明
--------

================= ================ ================= ================= =================
题目名称           质数取石子       多人背包           不听话的机器人     新魔法药水
----------------- ---------------- ----------------- ----------------- -----------------
源文件名           game.c/cpp/pas   bags.c/cpp/pas    robot.c/cpp/pas   magic.c/cpp/pas
----------------- ---------------- ----------------- ----------------- -----------------
输入文件名         game.in          bags.in           robot.in          magic.in
----------------- ---------------- ----------------- ----------------- -----------------
输出文件名         game.out         bags.out          robot.out         magic.out
----------------- ---------------- ----------------- ----------------- -----------------
每个测试点的时限    2s               2s                2s                2s
----------------- ---------------- ----------------- ----------------- -----------------
内存限制           64M              64M               64M               64M
================= ================ ================= ================= =================

----------
质数取石子
----------


题目描述
========

DD 和 MM 正在玩取石子游戏。他们的游戏规则是这样的：桌上有若干石子，DD 先取，轮流取，每次必须取质数个。如果某一时刻某一方无法从桌上的石子中取质数个，比如说剩下 0 个或 1 个石子，那么他/她就输了。

DD 和 MM 都很聪明，不管哪方存在一个可以必胜的最优策略，他/她都会按照最优策略保证胜利。于是，DD 想知道，对于给定的桌面上的石子数，他究竟能不能取得胜利呢？

当 DD 确定会取得胜利时，他会说：“不管 MM 选择怎样的取石子策略，我都能保证至多 X 步以后就能取得胜利。”那么，最小的满足要求的 X 是多少呢？注意，不管是 DD 取一次石子还是 MM 取一次石子都应该被计算为“一步”。


输入格式
========

第一行有一个整数 N，表示这个输入文件中包含 N 个测试数据。

第二行开始，每行有一个测试数据，其中仅包含一个整数，表示桌面上的石子数。


输出格式
========

你需要对于每个输入文件中的 N 个测试数据输出相应的 N 行。

如果对于该种情形是 DD 一定取得胜利，那么输出最小的 X。否则该行输出 -1。


样例输入
========

::

	3
	8
	9
	16


样例输出
========

::

	1
	-1
	3


样例说明
========

当桌上有 8 个石子时，先取的 DD 只需要取走 7 个石子剩下 1 个就可以在一步之后保证胜利，输出 1。

当桌上有 9 个石子时。若 DD 取走 2 个，MM 会取走 7 个，剩下 0 个，DD 输。若 DD 取走 3 个，MM 会取走 5 个，剩下 1 个，DD 输。DD 取走 5 个或者 7 个的情况同理可知。所以当桌上有 9 个石子时，不管 DD 怎么取，MM 都可以让 DD 输，输出 -1。

当桌上有 16 个石子时，DD 可以保证在 3 步以内取得胜利。可以证明，为了在 3 步内取得胜利，DD 第一步必须取 7 个石子。剩下 9 个石子之后，不管第二步 MM 怎么取，DD 取了第三步以后可以保证胜利，所以输出 3。


数据范围
========

输入文件中的数据数 N<=10。

每次桌上初始的石子数都不超过 20000。

--------
多人背包
--------

题目描述
========

DD 和好朋友们要去爬山啦！他们一共有 K 个人，每个人都会背一个包。这些包的容量是相同的，都是 V。可以装进背包里的一共有 N 种物品，每种物品都有给定的体积和价值。

在 DD 看来，合理的背包安排方案是这样的：

(1) 每个人背包里装的物品的总体积恰等于包的容量。
(2) 每个包里的每种物品最多只有一件，但两个不同的包中可以存在相同的物品。
(3) 任意两个人，他们包里的物品清单不能完全相同。

在满足以上要求的前提下，所有包里的所有物品的总价值最大是多少呢？


输入格式
========

第一行有三个整数：K、V、N。

第二行开始的 N 行，每行有两个整数，分别代表这件物品的体积和价值。


输出格式
========

只需输出一个整数，即在满足以上要求的前提下所有物品的总价值的最大值。


样例输入
========

::

	2 10 5
	3 12
	7 20
	2 4
	5 6
	1 1


样例输出
========

::

	57


样例说明
========

一种可以得到最优解的方案是：第一个人背体积为 7、2、1 的三种物品，价值为 25。第二个人背体积为 3、7 的两种物品，价值为 32。总价值 57。


数据范围
========

总人数 K<=50。

每个背包的容量 V<=5000。

物品种类数 N<=200。

其它正整数都不超过 5000。

输入数据保证存在满足要求的方案。


--------------
不听话的机器人
--------------

题目描述
========

DD 有一个不太听话的机器人，这个机器人总是会有自己的想法，而不会完全遵守 DD 给它的指令。

现在 DD 在试图命令机器人走迷宫。迷宫是一个 N*N 个格子组成的区域，格子自左上角到右下角从 (1,1) 到 (N,N) 编号。第 i 行、第 j 列的格子编号为 (i,j)。迷宫中的某些区域是障碍物，机器人不能移动到那里。

DD 给了机器人 M 条指令，指令的类型包括“前进一步”“后退一步”“左转九十度”“右转九十度”。但问题是机器人并不能完全遵守这些指令，因为如果机器人完全遵守这些指令，它可能会走到障碍物的格子里或者走到迷宫外面去，那样就会有危险。机器人希望从这个指令序列里面去掉一些，然后执行剩下的指令时，可以保证整个过程中都不会有危险。

机器人虽然不太听话，但它并不想惹恼了 DD，否则 DD 可能会把它拆掉的。所以机器人希望去掉的指令尽量少。

那么，机器人最少需要去掉多少条指令才能保证不会有危险呢？


输入格式
========

第一行有四个整数 N、M、X0、Y0。表示迷宫的大小是 N*N，指令共有 M 条，机器人初始时的位置是 (X0,Y0)。机器人初始时面朝的方向是上方。也就是说，若机器人按照初始时的方向走，效果是所在的 X 坐标越来越小。

下面有 N 行，每行有 N 个字符，可能是点号 '.' 或星号 '*'。'.' 表示空地，'*' 表示障碍。初始位置肯定是一个空地。

下面的 M 行，每行有一个字符串，表示指令。字符串可能是：FORWARD（前进一步）、BACK（后退一步）、LEFT（左转）、RIGHT（右转）。


输出格式
========

只需要输出一个整数，表示机器人最少需要去掉多少条指令才能保证不出危险。


样例输入
========

::

	4 7 3 3
	.***
	..**
	*..*
	****
	LEFT
	FORWARD
	LEFT
	BACK
	FORWARD
	RIGHT
	FORWARD


样例输出
========

::

	1


样例说明
========

去掉第 3 条、第 5 条或者第 7 条指令都可以保证机器人无危险。


数据范围
========

迷宫的边长 N<=100。

指令数 M<=1000。


----------
新魔法药水
----------

题目描述
========

魔法师 DD 想给 MM 送一份生日礼物，可是他没有足够的金币。魔法娴熟的 DD 自然想到了利用自己高明的魔药配制技巧来多赚一些金币。

DD 一共知道 N 种魔药（以 1..N 编号），还掌握 M 种配制魔药的方法（以 1..M 编号）。他掌握的每种配制魔药的方法都可以简单表述如下：将若干种魔药各一瓶倒入坩埚内，用魔杖搅拌的同时施出一个特定的魔法，再经过适当浓缩，就可以得到一瓶新的魔药。

森林里有一家魔法商店，这里不仅出售各种魔药，同时也以比售价略低的价格收购各种魔药。DD 的如意算盘就是：首先用自己攒下的 V 个金币去魔法商店购买一些魔药作为原料，再用一天的时间在家努力地配制，最后把配制好的成品再卖给魔法商店。

然而，由于魔法修为的原因，DD 在一天之内最多只能施出 K 次魔法。

DD 想让你帮他算一算，他最多能够在这一天时间内赚到多少金币呢？


输入格式
========

第一行有四个整数：N、M、V、K。

第二行开始的 N 行，每行有两个整数，第 i+1 行的两个整数分别表示第 i 种魔药的销售价和收购价。

第 N+2 行开始的 M 行，每行有若干个整数，表示 DD 知道的一种魔药配制方法。每行的格式都是这样的：第一个整数表示这种魔药配制方法可以得到的一瓶魔药成品的编号。下一个整数 n（n<N），表示这种配制方法需要 n 瓶原料。下面 n 个整数，表示这 n 瓶原料的编号。


输出格式
========

只需输出一个整数，表示最多可以赚到金币的数量。


样例输入
========

::

	4 2 6 3
	1 0
	1 0
	5 3
	20 15
	3 2 1 2
	4 3 1 2 3


样例输出
========

::

	12


样例说明
========

一种最优方案是：买进 1 号和 2 号药水各三瓶，花费 6 金币。使用 1 号魔法 2 次，2 号魔法 1 次。最后得到一瓶 3 号药水，一瓶 4 号药水，卖得 18 金币。赚了 12 金币。


数据范围
========

药水种类 N<=60。

配制方法数 M<=240。

初始的金币数 V<=1000。

每天可施的魔法数 K<=30。


.. Important:: 你作为email附件发送的压缩包，应该包括且仅包括你要提交的所有源文件（.c/.cpp/.pas），没有任何文件夹，更不要打包任何可执行文件。压缩包的文件名即你想采用的参赛名。

.. footer::

  Copyright (c)  2007  Tianyi Cui

  Permission is granted to copy, distribute and/or modify this document under the terms of `the GNU Free Documentation License`_, Version 1.2 or any later version published by the Free Software Foundation.

.. _the GNU Free Documentation License: http://www.gnu.org/licenses/fdl.txt
