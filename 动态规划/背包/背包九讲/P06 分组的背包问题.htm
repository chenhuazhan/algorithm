<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0059)http://www.concretevitamin.com.cn/informatics/Pack/P06.html -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>P06: 分组的背包问题</TITLE>
<META content="MSHTML 6.00.5840.16384" name=GENERATOR>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<STYLE type=text/css>BODY {
	BACKGROUND: white; MARGIN-LEFT: 3%; COLOR: black; MARGIN-RIGHT: 7%
}
P {
	MARGIN-TOP: 1%
}
P.verse {
	MARGIN-LEFT: 3%
}
.example {
	MARGIN-LEFT: 3%
}
H2 {
	MARGIN-TOP: 25px; MARGIN-BOTTOM: 0px
}
H3 {
	MARGIN-BOTTOM: 0px
}
</STYLE>
</HEAD>
<BODY>
<H1>P06: 分组的背包问题</H1><!-- Page published by Emacs Muse begins here -->
<H2>问题</H2>
<P 
class=first>有N件物品和一个容量为V的背包。第i件物品的费用是c[i]，价值是w[i]。这些物品被划分为若干组，每组中的物品互相冲突，最多选一件。求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。</P>
<H2>算法</H2>
<P 
class=first>这个问题变成了每组物品有若干种策略：是选择本组的某一件，还是一件都不选。也就是说设f[k][v]表示前k组物品花费费用v能取得的最大权值，则有：</P>
<BLOCKQUOTE>
  <P 
  class=quoted><CODE>f[k][v]=max{f[k-1][v],f[k-1][v-c[i]]+w[i]|物品i属于组k}</CODE></P></BLOCKQUOTE>
<P>使用一维数组的伪代码如下：</P><PRE class=example>for 所有的组k
    for v=V..0
        for 所有的i属于组k
            f[v]=max{f[v],f[v-c[i]]+w[i]}
</PRE>
<P>注意这里的三层循环的顺序，甚至在本文的第一个beta版中我自己都写错了。“for v=V..0”这一层循环必须在“for 
所有的i属于组k”之外。这样才能保证每一组内的物品最多只有一个会被添加到背包中。</P>
<P>另外，显然可以对每组内的物品应用<A 
href="http://www.concretevitamin.com.cn/informatics/Pack/P02.html">P02</A>中“一个简单有效的优化”。</P>
<H2>小结</H2>
<P class=first>分组的背包问题将彼此互斥的若干物品称为一个组，这建立了一个很好的模型。不少背包问题的变形都可以转化为分组的背包问题（例如<A 
href="http://www.concretevitamin.com.cn/informatics/Pack/P07.html">P07</A>），由分组的背包问题进一步可定义“泛化物品”的概念，十分有利于解题。</P>
<P><A 
href="http://www.concretevitamin.com.cn/informatics/Pack/Index.html">首页</A></P>
<HR>

<P>Copyright (c) 2007 Tianyi Cui</P>
<P>Permission is granted to copy, distribute and/or modify this document under 
the terms of the <A href="http://www.gnu.org/licenses/fdl.txt">GNU Free 
Documentation License</A>, Version 1.2 or any later version published by the 
Free Software 
Foundation.</P><!-- Page published by Emacs Muse ends here --></BODY></HTML>
